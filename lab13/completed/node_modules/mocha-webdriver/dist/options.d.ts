import * as chrome from 'selenium-webdriver/chrome';
import * as firefox from 'selenium-webdriver/firefox';
export interface IDriverOptions {
    capabilities: {
        [key: string]: any;
    };
    chromeOpts: chrome.Options;
    firefoxOpts: firefox.Options;
}
export declare type OptionsModifyFunc = (opts: IDriverOptions) => void;
/**
 * To modify webdriver options, call this before mocha's before() hook. Your callback will be
 * called on driver creation with an object containing `chromeOpts` and `firefoxOpts`, and can
 * modify them in-place. E.g.
 *
 *    setOptionsModifyFunc(({chromeOpts}) => chromOpts.setUserPreferences({homepage: ...}));
 */
export declare function setOptionsModifyFunc(modifyFunc: OptionsModifyFunc | null): void;
export declare function optionsModifyFunc(opts: IDriverOptions): void;
